{"version":3,"file":"static/js/124.b13498f1.chunk.js","mappings":"gVAGAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CAAEC,QAAS,qCAGRC,EAAgB,mCAAG,+GAELH,IAAAA,IAAU,sBAAuBC,GAF5B,cAEtBG,EAFsB,OAGtBC,EAAaD,EAASE,KAAKC,QAHL,kBAIrBF,GAJqB,gCAM5BG,EAAAA,GAAAA,MAAY,kCANgB,yDAAH,qDAUhBC,EAAW,mCAAG,WAAMC,GAAN,kGAEAV,IAAAA,IAAA,iBAAoBU,GAAUT,GAF9B,cAEjBG,EAFiB,OAIjBO,EAAeP,EAASE,KAJP,kBAKhBK,GALgB,gCAOvBH,EAAAA,GAAAA,MAAY,kCAPW,yDAAH,sDAWXI,EAAW,mCAAG,WAAMF,GAAN,kGAEAV,IAAAA,IAAA,iBAAoBU,EAApB,YAAsCT,GAFtC,cAEjBG,EAFiB,OAGjBS,EAAWT,EAASE,KAAKQ,KAHR,kBAIhBD,GAJgB,gCAMvBL,EAAAA,GAAAA,MAAY,kCANW,yDAAH,sDAUXO,EAAc,mCAAG,WAAML,GAAN,kGAEHV,IAAAA,IAAA,iBAAoBU,EAApB,YAAsCT,GAFnC,cAEpBG,EAFoB,OAGpBY,EAAcZ,EAASE,KAAKC,QAHR,kBAInBS,GAJmB,gCAM1BR,EAAAA,GAAAA,MAAY,kCANc,yDAAH,sDAUdS,EAAc,mCAAG,WAAMC,GAAN,kGAEHlB,IAAAA,IAAA,gBAA2B,CAChDC,QAAO,kBACFA,EAAOA,QADN,IAEJiB,MAAOA,MALe,cAEpBd,EAFoB,OASpBe,EAAef,EAASE,KAAKC,QATT,kBAUnBY,GAVmB,gCAY1BX,EAAAA,GAAAA,MAAY,kCAZc,yDAAH,uD,sHCzB3B,EAtBqB,SAAC,GAAc,IAAZF,EAAW,EAAXA,KACdc,EAAkCd,EAAlCc,aAAcC,EAAoBf,EAApBe,UAAWC,EAAShB,EAATgB,KAEjC,OACE,0BACGF,IACC,gBAAKG,IAAG,yCAAoCH,GAAgBI,IAAI,MAElE,uBAAIF,KACJ,sCAAcD,SCoBpB,EA3Ba,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOb,EAAP,KAAac,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,IAAYa,GAASK,MAAK,SAAAC,GACpBC,MAAMC,QAAQF,IAChBH,EAAQG,QAGX,CAACN,KAGF,yBACGX,GACC,wBACGA,EAAKoB,KAAI,SAAAC,GACR,OAAO,SAAC,EAAD,CAA0B7B,KAAM6B,GAAbA,EAAGC,UAIjC","sources":["service/api.js","components/CastListItem/CastListItem.js","views/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: { api_key: '6b956d9320e8e098b01748da89295179' },\n};\n\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get('/trending/movie/day', params);\n    const filmsArray = response.data.results;\n    return filmsArray;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n\nexport const getFilmById = async filmId => {\n  try {\n    const response = await axios.get(`/movie/${filmId}`, params);\n\n    const filmsDetails = response.data;\n    return filmsDetails;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n\nexport const getFilmCast = async filmId => {\n  try {\n    const response = await axios.get(`/movie/${filmId}/credits`, params);\n    const filmCast = response.data.cast;\n    return filmCast;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n\nexport const getFilmReviews = async filmId => {\n  try {\n    const response = await axios.get(`/movie/${filmId}/reviews`, params);\n    const filmReviews = response.data.results;\n    return filmReviews;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n\nexport const getFilmByQuery = async query => {\n  try {\n    const response = await axios.get(`/search/movie`, {\n      params: {\n        ...params.params,\n        query: query,\n      },\n    });\n\n    const filmsByQuery = response.data.results;\n    return filmsByQuery;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CastListItem = ({ data }) => {\n  const { profile_path, character, name } = data;\n\n  return (\n    <li>\n      {profile_path && (\n        <img src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt=\"\" />\n      )}\n      <p>{name}</p>\n      <p>Character:{character}</p>\n    </li>\n  );\n};\n\nCastListItem.propTypes = {\n  data: PropTypes.shape({\n    profile_path: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n\nexport default CastListItem;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFilmCast } from 'service/api';\nimport CastListItem from 'components/CastListItem';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getFilmCast(movieId).then(res => {\n      if (Array.isArray(res)) {\n        setCast(res);\n      }\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast ? (\n        <ul>\n          {cast.map(el => {\n            return <CastListItem key={el.id} data={el} />;\n          })}\n        </ul>\n      ) : (\n        <p>Sorry, we don't have information</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","params","api_key","getTrendingFilms","response","filmsArray","data","results","toast","getFilmById","filmId","filmsDetails","getFilmCast","filmCast","cast","getFilmReviews","filmReviews","getFilmByQuery","query","filmsByQuery","profile_path","character","name","src","alt","movieId","useParams","useState","setCast","useEffect","then","res","Array","isArray","map","el","id"],"sourceRoot":""}